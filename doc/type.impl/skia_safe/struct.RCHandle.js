(function() {var type_impls = {
"skia_safe":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CRCHandle%3CN%3E%3E-for-RCHandle%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/prelude.rs.html#541-545\">source</a><a href=\"#impl-AsRef%3CRCHandle%3CN%3E%3E-for-RCHandle%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N: NativeRefCounted&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"skia_safe/struct.RCHandle.html\" title=\"struct skia_safe::RCHandle\">RCHandle</a>&lt;N&gt;&gt; for <a class=\"struct\" href=\"skia_safe/struct.RCHandle.html\" title=\"struct skia_safe::RCHandle\">RCHandle</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/prelude.rs.html#542-544\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<RCHandle<N>>","skia_safe::core::bbh_factory::BBoxHierarchy","skia_safe::core::blender::Blender","skia_safe::core::color_filter::ColorFilter","skia_safe::core::color_space::ColorSpace","skia_safe::core::color_table::ColorTable","skia_safe::core::contour_measure::ContourMeasure","skia_safe::core::data::Data","skia_safe::core::data_table::DataTable","skia_safe::core::drawable::Drawable","skia_safe::core::font_mgr::FontStyleSet","skia_safe::core::font_mgr::FontMgr","skia_safe::core::image::Image","skia_safe::core::image_filter::ImageFilter","skia_safe::core::mask_filter::MaskFilter","skia_safe::core::path_effect::PathEffect","skia_safe::core::picture::Picture","skia_safe::core::pixel_ref::PixelRef","skia_safe::core::shader::Shader","skia_safe::core::surface::Surface","skia_safe::core::text_blob::TextBlob","skia_safe::core::typeface::Typeface","skia_safe::core::vertices::Vertices","skia_safe::effects::runtime_effect::RuntimeEffect","skia_safe::gpu::direct_context::DirectContext","skia_safe::gpu::gl::interface::Interface","skia_safe::gpu::mutable_texture_state::MutableTextureState","skia_safe::gpu::recording_context::RecordingContext","skia_safe::modules::paragraph::font_collection::FontCollection","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontStyleSet","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontProvider","skia_safe::modules::svg::Dom","skia_safe::utils::ordered_font_mgr::OrderedFontMgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-RCHandle%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/prelude.rs.html#623-630\">source</a><a href=\"#impl-Clone-for-RCHandle%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N: NativeRefCounted&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"skia_safe/struct.RCHandle.html\" title=\"struct skia_safe::RCHandle\">RCHandle</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/prelude.rs.html#624-629\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","skia_safe::core::bbh_factory::BBoxHierarchy","skia_safe::core::blender::Blender","skia_safe::core::color_filter::ColorFilter","skia_safe::core::color_space::ColorSpace","skia_safe::core::color_table::ColorTable","skia_safe::core::contour_measure::ContourMeasure","skia_safe::core::data::Data","skia_safe::core::data_table::DataTable","skia_safe::core::drawable::Drawable","skia_safe::core::font_mgr::FontStyleSet","skia_safe::core::font_mgr::FontMgr","skia_safe::core::image::Image","skia_safe::core::image_filter::ImageFilter","skia_safe::core::mask_filter::MaskFilter","skia_safe::core::path_effect::PathEffect","skia_safe::core::picture::Picture","skia_safe::core::pixel_ref::PixelRef","skia_safe::core::shader::Shader","skia_safe::core::surface::Surface","skia_safe::core::text_blob::TextBlob","skia_safe::core::typeface::Typeface","skia_safe::core::vertices::Vertices","skia_safe::effects::runtime_effect::RuntimeEffect","skia_safe::gpu::direct_context::DirectContext","skia_safe::gpu::gl::interface::Interface","skia_safe::gpu::mutable_texture_state::MutableTextureState","skia_safe::gpu::recording_context::RecordingContext","skia_safe::modules::paragraph::font_collection::FontCollection","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontStyleSet","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontProvider","skia_safe::modules::svg::Dom","skia_safe::utils::ordered_font_mgr::OrderedFontMgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConditionallySend-for-RCHandle%3CH%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/prelude.rs.html#995-1007\">source</a><a href=\"#impl-ConditionallySend-for-RCHandle%3CH%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H: NativeRefCountedBase&gt; <a class=\"trait\" href=\"skia_safe/trait.ConditionallySend.html\" title=\"trait skia_safe::ConditionallySend\">ConditionallySend</a> for <a class=\"struct\" href=\"skia_safe/struct.RCHandle.html\" title=\"struct skia_safe::RCHandle\">RCHandle</a>&lt;H&gt;</h3></section></summary><div class=\"docblock\"><p><code>RCHandle&lt;H&gt;</code> is conditionally Send and can be sent to\nanother thread when its reference count is 1.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_send\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/prelude.rs.html#996-998\">source</a><a href=\"#method.can_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"skia_safe/trait.ConditionallySend.html#tymethod.can_send\" class=\"fn\">can_send</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the handle can be sent to another thread.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrap_send\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/prelude.rs.html#1000-1006\">source</a><a href=\"#method.wrap_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"skia_safe/trait.ConditionallySend.html#tymethod.wrap_send\" class=\"fn\">wrap_send</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"skia_safe/struct.Sendable.html\" title=\"struct skia_safe::Sendable\">Sendable</a>&lt;Self&gt;, Self&gt;</h4></section></summary><div class='docblock'>Wrap the handle in a type that can be sent to another thread and unwrapped there. <a href=\"skia_safe/trait.ConditionallySend.html#tymethod.wrap_send\">Read more</a></div></details></div></details>","ConditionallySend","skia_safe::core::bbh_factory::BBoxHierarchy","skia_safe::core::blender::Blender","skia_safe::core::color_filter::ColorFilter","skia_safe::core::color_space::ColorSpace","skia_safe::core::color_table::ColorTable","skia_safe::core::contour_measure::ContourMeasure","skia_safe::core::data::Data","skia_safe::core::data_table::DataTable","skia_safe::core::drawable::Drawable","skia_safe::core::font_mgr::FontStyleSet","skia_safe::core::font_mgr::FontMgr","skia_safe::core::image::Image","skia_safe::core::image_filter::ImageFilter","skia_safe::core::mask_filter::MaskFilter","skia_safe::core::path_effect::PathEffect","skia_safe::core::picture::Picture","skia_safe::core::pixel_ref::PixelRef","skia_safe::core::shader::Shader","skia_safe::core::surface::Surface","skia_safe::core::text_blob::TextBlob","skia_safe::core::typeface::Typeface","skia_safe::core::vertices::Vertices","skia_safe::effects::runtime_effect::RuntimeEffect","skia_safe::gpu::direct_context::DirectContext","skia_safe::gpu::gl::interface::Interface","skia_safe::gpu::mutable_texture_state::MutableTextureState","skia_safe::gpu::recording_context::RecordingContext","skia_safe::modules::paragraph::font_collection::FontCollection","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontStyleSet","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontProvider","skia_safe::modules::svg::Dom","skia_safe::utils::ordered_font_mgr::OrderedFontMgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-RCHandle%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/prelude.rs.html#632-637\">source</a><a href=\"#impl-Drop-for-RCHandle%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N: NativeRefCounted&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"skia_safe/struct.RCHandle.html\" title=\"struct skia_safe::RCHandle\">RCHandle</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/prelude.rs.html#634-636\">source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","skia_safe::core::bbh_factory::BBoxHierarchy","skia_safe::core::blender::Blender","skia_safe::core::color_filter::ColorFilter","skia_safe::core::color_space::ColorSpace","skia_safe::core::color_table::ColorTable","skia_safe::core::contour_measure::ContourMeasure","skia_safe::core::data::Data","skia_safe::core::data_table::DataTable","skia_safe::core::drawable::Drawable","skia_safe::core::font_mgr::FontStyleSet","skia_safe::core::font_mgr::FontMgr","skia_safe::core::image::Image","skia_safe::core::image_filter::ImageFilter","skia_safe::core::mask_filter::MaskFilter","skia_safe::core::path_effect::PathEffect","skia_safe::core::picture::Picture","skia_safe::core::pixel_ref::PixelRef","skia_safe::core::shader::Shader","skia_safe::core::surface::Surface","skia_safe::core::text_blob::TextBlob","skia_safe::core::typeface::Typeface","skia_safe::core::vertices::Vertices","skia_safe::effects::runtime_effect::RuntimeEffect","skia_safe::gpu::direct_context::DirectContext","skia_safe::gpu::gl::interface::Interface","skia_safe::gpu::mutable_texture_state::MutableTextureState","skia_safe::gpu::recording_context::RecordingContext","skia_safe::modules::paragraph::font_collection::FontCollection","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontStyleSet","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontProvider","skia_safe::modules::svg::Dom","skia_safe::utils::ordered_font_mgr::OrderedFontMgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Flattenable-for-RCHandle%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/core/flattenable.rs.html#26-46\">source</a><a href=\"#impl-Flattenable-for-RCHandle%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"skia_safe/trait.Flattenable.html\" title=\"trait skia_safe::Flattenable\">Flattenable</a> for <a class=\"struct\" href=\"skia_safe/struct.RCHandle.html\" title=\"struct skia_safe::RCHandle\">RCHandle</a>&lt;N&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"skia_safe/trait.NativeFlattenable.html\" title=\"trait skia_safe::NativeFlattenable\">NativeFlattenable</a> + NativeRefCountedBase,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/core/flattenable.rs.html#30-36\">source</a><a href=\"#method.type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"skia_safe/trait.Flattenable.html#tymethod.type_name\" class=\"fn\">type_name</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a></h4></section><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/core/flattenable.rs.html#38-41\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"skia_safe/trait.Flattenable.html#tymethod.serialize\" class=\"fn\">serialize</a>(&amp;self) -&gt; <a class=\"type\" href=\"skia_safe/type.Data.html\" title=\"type skia_safe::Data\">Data</a></h4></section><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/core/flattenable.rs.html#43-45\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"skia_safe/trait.Flattenable.html#tymethod.deserialize\" class=\"fn\">deserialize</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></div></details>","Flattenable","skia_safe::core::bbh_factory::BBoxHierarchy","skia_safe::core::blender::Blender","skia_safe::core::color_filter::ColorFilter","skia_safe::core::color_space::ColorSpace","skia_safe::core::color_table::ColorTable","skia_safe::core::contour_measure::ContourMeasure","skia_safe::core::data::Data","skia_safe::core::data_table::DataTable","skia_safe::core::drawable::Drawable","skia_safe::core::font_mgr::FontStyleSet","skia_safe::core::font_mgr::FontMgr","skia_safe::core::image::Image","skia_safe::core::image_filter::ImageFilter","skia_safe::core::mask_filter::MaskFilter","skia_safe::core::path_effect::PathEffect","skia_safe::core::picture::Picture","skia_safe::core::pixel_ref::PixelRef","skia_safe::core::shader::Shader","skia_safe::core::surface::Surface","skia_safe::core::text_blob::TextBlob","skia_safe::core::typeface::Typeface","skia_safe::core::vertices::Vertices","skia_safe::effects::runtime_effect::RuntimeEffect","skia_safe::gpu::direct_context::DirectContext","skia_safe::gpu::gl::interface::Interface","skia_safe::gpu::mutable_texture_state::MutableTextureState","skia_safe::gpu::recording_context::RecordingContext","skia_safe::modules::paragraph::font_collection::FontCollection","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontStyleSet","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontProvider","skia_safe::modules::svg::Dom","skia_safe::utils::ordered_font_mgr::OrderedFontMgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26RCHandle%3CN%3E%3E-for-RCHandle%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/prelude.rs.html#535-539\">source</a><a href=\"#impl-From%3C%26RCHandle%3CN%3E%3E-for-RCHandle%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N: NativeRefCounted&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"skia_safe/struct.RCHandle.html\" title=\"struct skia_safe::RCHandle\">RCHandle</a>&lt;N&gt;&gt; for <a class=\"struct\" href=\"skia_safe/struct.RCHandle.html\" title=\"struct skia_safe::RCHandle\">RCHandle</a>&lt;N&gt;</h3></section></summary><div class=\"docblock\"><p>A reference counted handle is cheap to clone, so we do support a conversion\nfrom a reference to a ref counter to an owned handle.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/prelude.rs.html#536-538\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(rch: &amp;<a class=\"struct\" href=\"skia_safe/struct.RCHandle.html\" title=\"struct skia_safe::RCHandle\">RCHandle</a>&lt;N&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&RCHandle<N>>","skia_safe::core::bbh_factory::BBoxHierarchy","skia_safe::core::blender::Blender","skia_safe::core::color_filter::ColorFilter","skia_safe::core::color_space::ColorSpace","skia_safe::core::color_table::ColorTable","skia_safe::core::contour_measure::ContourMeasure","skia_safe::core::data::Data","skia_safe::core::data_table::DataTable","skia_safe::core::drawable::Drawable","skia_safe::core::font_mgr::FontStyleSet","skia_safe::core::font_mgr::FontMgr","skia_safe::core::image::Image","skia_safe::core::image_filter::ImageFilter","skia_safe::core::mask_filter::MaskFilter","skia_safe::core::path_effect::PathEffect","skia_safe::core::picture::Picture","skia_safe::core::pixel_ref::PixelRef","skia_safe::core::shader::Shader","skia_safe::core::surface::Surface","skia_safe::core::text_blob::TextBlob","skia_safe::core::typeface::Typeface","skia_safe::core::vertices::Vertices","skia_safe::effects::runtime_effect::RuntimeEffect","skia_safe::gpu::direct_context::DirectContext","skia_safe::gpu::gl::interface::Interface","skia_safe::gpu::mutable_texture_state::MutableTextureState","skia_safe::gpu::recording_context::RecordingContext","skia_safe::modules::paragraph::font_collection::FontCollection","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontStyleSet","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontProvider","skia_safe::modules::svg::Dom","skia_safe::utils::ordered_font_mgr::OrderedFontMgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-RCHandle%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/prelude.rs.html#639-643\">source</a><a href=\"#impl-PartialEq-for-RCHandle%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N: NativeRefCounted + NativePartialEq&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"skia_safe/struct.RCHandle.html\" title=\"struct skia_safe::RCHandle\">RCHandle</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/prelude.rs.html#640-642\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","skia_safe::core::bbh_factory::BBoxHierarchy","skia_safe::core::blender::Blender","skia_safe::core::color_filter::ColorFilter","skia_safe::core::color_space::ColorSpace","skia_safe::core::color_table::ColorTable","skia_safe::core::contour_measure::ContourMeasure","skia_safe::core::data::Data","skia_safe::core::data_table::DataTable","skia_safe::core::drawable::Drawable","skia_safe::core::font_mgr::FontStyleSet","skia_safe::core::font_mgr::FontMgr","skia_safe::core::image::Image","skia_safe::core::image_filter::ImageFilter","skia_safe::core::mask_filter::MaskFilter","skia_safe::core::path_effect::PathEffect","skia_safe::core::picture::Picture","skia_safe::core::pixel_ref::PixelRef","skia_safe::core::shader::Shader","skia_safe::core::surface::Surface","skia_safe::core::text_blob::TextBlob","skia_safe::core::typeface::Typeface","skia_safe::core::vertices::Vertices","skia_safe::effects::runtime_effect::RuntimeEffect","skia_safe::gpu::direct_context::DirectContext","skia_safe::gpu::gl::interface::Interface","skia_safe::gpu::mutable_texture_state::MutableTextureState","skia_safe::gpu::recording_context::RecordingContext","skia_safe::modules::paragraph::font_collection::FontCollection","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontStyleSet","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontProvider","skia_safe::modules::svg::Dom","skia_safe::utils::ordered_font_mgr::OrderedFontMgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PointerWrapper%3CN%3E-for-RCHandle%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/wrapper.rs.html#167-186\">source</a><a href=\"#impl-PointerWrapper%3CN%3E-for-RCHandle%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"skia_safe/wrapper/trait.PointerWrapper.html\" title=\"trait skia_safe::wrapper::PointerWrapper\">PointerWrapper</a>&lt;N&gt; for <a class=\"struct\" href=\"skia_safe/struct.RCHandle.html\" title=\"struct skia_safe::RCHandle\">RCHandle</a>&lt;N&gt;<div class=\"where\">where\n    N: NativeRefCounted,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrap\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/wrapper.rs.html#171-173\">source</a><a href=\"#method.wrap\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"skia_safe/wrapper/trait.PointerWrapper.html#tymethod.wrap\" class=\"fn\">wrap</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.pointer.html\">*mut N</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Wraps a native pointer into a wrapper type.\nReturns <code>None</code> if the pointer is <code>null</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/wrapper.rs.html#175-177\">source</a><a href=\"#method.unwrap\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"skia_safe/wrapper/trait.PointerWrapper.html#tymethod.unwrap\" class=\"fn\">unwrap</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.pointer.html\">*mut N</a></h4></section></summary><div class='docblock'>Unwraps the wrapper type into the native pointer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/wrapper.rs.html#179-181\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"skia_safe/wrapper/trait.PointerWrapper.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;N</a></h4></section></summary><div class='docblock'>Access the wrapped pointer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/wrapper.rs.html#183-185\">source</a><a href=\"#method.inner_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"skia_safe/wrapper/trait.PointerWrapper.html#tymethod.inner_mut\" class=\"fn\">inner_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut N</a></h4></section></summary><div class='docblock'>Access the wrapped pointer.</div></details></div></details>","PointerWrapper<N>","skia_safe::core::bbh_factory::BBoxHierarchy","skia_safe::core::blender::Blender","skia_safe::core::color_filter::ColorFilter","skia_safe::core::color_space::ColorSpace","skia_safe::core::color_table::ColorTable","skia_safe::core::contour_measure::ContourMeasure","skia_safe::core::data::Data","skia_safe::core::data_table::DataTable","skia_safe::core::drawable::Drawable","skia_safe::core::font_mgr::FontStyleSet","skia_safe::core::font_mgr::FontMgr","skia_safe::core::image::Image","skia_safe::core::image_filter::ImageFilter","skia_safe::core::mask_filter::MaskFilter","skia_safe::core::path_effect::PathEffect","skia_safe::core::picture::Picture","skia_safe::core::pixel_ref::PixelRef","skia_safe::core::shader::Shader","skia_safe::core::surface::Surface","skia_safe::core::text_blob::TextBlob","skia_safe::core::typeface::Typeface","skia_safe::core::vertices::Vertices","skia_safe::effects::runtime_effect::RuntimeEffect","skia_safe::gpu::direct_context::DirectContext","skia_safe::gpu::gl::interface::Interface","skia_safe::gpu::mutable_texture_state::MutableTextureState","skia_safe::gpu::recording_context::RecordingContext","skia_safe::modules::paragraph::font_collection::FontCollection","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontStyleSet","skia_safe::modules::paragraph::typeface_font_provider::TypefaceFontProvider","skia_safe::modules::svg::Dom","skia_safe::utils::ordered_font_mgr::OrderedFontMgr"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()