(function() {var type_impls = {
"skia_safe":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Budgeted\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/gpu/gpu_types.rs.html#13-22\">source</a><a href=\"#impl-Budgeted\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"skia_safe/gpu/struct.Budgeted.html\" title=\"struct skia_safe::gpu::Budgeted\">Budgeted</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.NO\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/skia_safe/gpu/gpu_types.rs.html#15\">source</a><h4 class=\"code-header\">pub const <a href=\"skia_safe/gpu/struct.Budgeted.html#associatedconstant.NO\" class=\"constant\">NO</a>: <a class=\"struct\" href=\"skia_safe/gpu/struct.Budgeted.html\" title=\"struct skia_safe::gpu::Budgeted\">Budgeted</a> = _</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 0.29.0: use No</span></div></span><section id=\"associatedconstant.YES\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/skia_safe/gpu/gpu_types.rs.html#17\">source</a><h4 class=\"code-header\">pub const <a href=\"skia_safe/gpu/struct.Budgeted.html#associatedconstant.YES\" class=\"constant\">YES</a>: <a class=\"struct\" href=\"skia_safe/gpu/struct.Budgeted.html\" title=\"struct skia_safe::gpu::Budgeted\">Budgeted</a> = _</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 0.29.0: use Yes</span></div></span><section id=\"associatedconstant.No\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/skia_safe/gpu/gpu_types.rs.html#20\">source</a><h4 class=\"code-header\">pub const <a href=\"skia_safe/gpu/struct.Budgeted.html#associatedconstant.No\" class=\"constant\">No</a>: <a class=\"struct\" href=\"skia_safe/gpu/struct.Budgeted.html\" title=\"struct skia_safe::gpu::Budgeted\">Budgeted</a> = _</h4></section><section id=\"associatedconstant.Yes\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/skia_safe/gpu/gpu_types.rs.html#21\">source</a><h4 class=\"code-header\">pub const <a href=\"skia_safe/gpu/struct.Budgeted.html#associatedconstant.Yes\" class=\"constant\">Yes</a>: <a class=\"struct\" href=\"skia_safe/gpu/struct.Budgeted.html\" title=\"struct skia_safe::gpu::Budgeted\">Budgeted</a> = _</h4></section></div></details>",0,"skia_safe::core::types::Budgeted"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Budgeted\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/gpu/gpu_types.rs.html#7\">source</a><a href=\"#impl-Clone-for-Budgeted\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"skia_safe/gpu/struct.Budgeted.html\" title=\"struct skia_safe::gpu::Budgeted\">Budgeted</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/gpu/gpu_types.rs.html#7\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"skia_safe/gpu/struct.Budgeted.html\" title=\"struct skia_safe::gpu::Budgeted\">Budgeted</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","skia_safe::core::types::Budgeted"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Budgeted\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/gpu/gpu_types.rs.html#7\">source</a><a href=\"#impl-Debug-for-Budgeted\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"skia_safe/gpu/struct.Budgeted.html\" title=\"struct skia_safe::gpu::Budgeted\">Budgeted</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/gpu/gpu_types.rs.html#7\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","skia_safe::core::types::Budgeted"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Budgeted\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/gpu/gpu_types.rs.html#7\">source</a><a href=\"#impl-PartialEq-for-Budgeted\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"skia_safe/gpu/struct.Budgeted.html\" title=\"struct skia_safe::gpu::Budgeted\">Budgeted</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/skia_safe/gpu/gpu_types.rs.html#7\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"skia_safe/gpu/struct.Budgeted.html\" title=\"struct skia_safe::gpu::Budgeted\">Budgeted</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","skia_safe::core::types::Budgeted"],["<section id=\"impl-Copy-for-Budgeted\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/gpu/gpu_types.rs.html#7\">source</a><a href=\"#impl-Copy-for-Budgeted\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"skia_safe/gpu/struct.Budgeted.html\" title=\"struct skia_safe::gpu::Budgeted\">Budgeted</a></h3></section>","Copy","skia_safe::core::types::Budgeted"],["<section id=\"impl-Eq-for-Budgeted\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/gpu/gpu_types.rs.html#7\">source</a><a href=\"#impl-Eq-for-Budgeted\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"skia_safe/gpu/struct.Budgeted.html\" title=\"struct skia_safe::gpu::Budgeted\">Budgeted</a></h3></section>","Eq","skia_safe::core::types::Budgeted"],["<section id=\"impl-StructuralPartialEq-for-Budgeted\" class=\"impl\"><a class=\"src rightside\" href=\"src/skia_safe/gpu/gpu_types.rs.html#7\">source</a><a href=\"#impl-StructuralPartialEq-for-Budgeted\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"skia_safe/gpu/struct.Budgeted.html\" title=\"struct skia_safe::gpu::Budgeted\">Budgeted</a></h3></section>","StructuralPartialEq","skia_safe::core::types::Budgeted"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()